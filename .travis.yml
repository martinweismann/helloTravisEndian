# sudo: required
# services:
  # - docker
# before_install:
  # - sudo apt-get update
  # - sudo apt-get install -y wget git
  # - sudo apt-get remove docker-ce
  # - echo "deb [arch=amd64 trusted=yes] http://ftp.unicamp.br/pub/linuxpatch/ubuntu/14_04/misc/docker-17.04.0-ce-amd64/ trusty main" | sudo tee /etc/apt/sources.list.d/docker-engine.list
  # - sudo apt-get update
  # - sudo apt-get install -y docker-engine
  # - docker run --rm --privileged multiarch/qemu-user-static:register
  # - wget https://github.com/multiarch/qemu-user-static/releases/download/v2.9.1/qemu-ppc64le-static.tar.gz -O /tmp/qemu-ppc64le-static.tar.gz
  # - tar zxvf /tmp/qemu-ppc64le-static.tar.gz -C /tmp
  # - git clone https://github.com/bpradipt/docker-mysql.git
  # - cd docker-mysql
  # # Build Power(ppc64le) Docker image
  # - docker build --volume type=bind,source=/tmp/qemu-ppc64le-static,target=/usr/bin/qemu-ppc64le-static  -f Dockerfile.ppc64le -t ppc64le/mysql .
  # # Build Intel(amd64) Docker image
  # - docker build -f Dockerfile -t amd64/mysql .
  # - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  # - docker run ppc64le/mysql /bin/sh "lscpu"
  # - docker run amd64/mysql /bin/sh "lscpu"
  
# install: true
# before_script: true
# script: docker images
# after_script: true


sudo: required

language: bash

dist: xenial

services:
  - docker

# https://eyskens.me/multiarch-docker-images/
before_install:
  - uname -m
  - lscpu
  - docker pull multiarch/qemu-user-static
  - docker pull arm64v8/ubuntu
  - docker pull s390x/ubuntu
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  # - docker run --rm -t arm64v8/ubuntu uname -m
  - docker run arm64v8/ubuntu /bin/sh -c "uname -m"
  - docker run arm64v8/ubuntu /bin/sh -c "lscpu"
  - docker run s390x/ubuntu /bin/sh -c "uname -m"
  - docker run s390x/ubuntu /bin/sh -c "lscpu"
  - docker run arm64v8/ubuntu /bin/sh -c "apt-get -y install cmake git gcc g++"
  - docker run arm64v8/ubuntu /bin/sh -c "git clone https://github.com/3MFConsortium/lib3mf.git"
  - docker run arm64v8/ubuntu /bin/sh -c "cd lib3mf; git checkout ${TRAVIS_BRANCH}"
  - docker run arm64v8/ubuntu /bin/sh -c "cd lib3mf; git submodule update --init --recursive"
  

#- docker pull ubuntu
#- docker run ubuntu /bin/sh -c "ls -ahl"
#- docker run ubuntu /bin/sh -c "lscpu"

script:
- pwd
